using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;

class GenerateSkyGradients
{
	static void Main()
	{
		var skies = new List<Sky>();

		using (var input = File.OpenRead("sky.raw"))
		{
			while (input.Length - input.Position >= 768)
			{
				byte[] palette = new byte[768];

				int offset = 0;

				while (offset < 768)
				{
					int numRead = input.Read(palette, offset, palette.Length - offset);

					if (numRead <= 0)
						throw new Exception("Read failed");

					offset += numRead;
				}

				skies.Add(new Sky(palette));
			}
		}

		skies.Sort((left, right) => left.Brightness.CompareTo(right.Brightness));

		using (var output = new StreamWriter("sky.cc"))
		{
			output.WriteLine("/***** GENERATED BY THE GEN_SKY TOOL, DO NOT MODIFY BY HAND *****/");
			output.WriteLine();
			output.WriteLine(@"#include ""sky.h""");
			output.WriteLine();
			output.WriteLine("const AquaSky sky[] =");
			output.WriteLine("  {");
			output.WriteLine("    { " + string.Join(" }," + output.NewLine + "    { ", skies) + " }");
			output.WriteLine("  };");
			output.WriteLine();
			output.WriteLine("const int sky_count = {0};", skies.Count);
			output.WriteLine();
			output.WriteLine("/***** GENERATED BY THE GEN_SKY TOOL, DO NOT MODIFY BY HAND *****/");
		}
	}
}
